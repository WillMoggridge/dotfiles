# Configuration for Alacritty, the GPU enhanced terminal emulator

# The FreeType rasterizer needs to know the device DPI for best results
# (changes require restart)
# dpi:
#   x: 96.0
#   y: 96.0

# Display tabs using this many cells (changes require restart)
selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>"

hide_cursor_when_typing: false
custom_cursor_colors: true

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: false

# Font configuration (changes require restart)
font:
  normal:
    family: "JetBrainsMono"
    style: Regular
  bold:
    family: "JetBrainsMono"
    style: Bold
  italic:
    family: "JetBrainsMono"
    style: Italic
  size: 11
  # offset:
  #   x: 1
  #   y: 1
  use_thin_strokes: true

window:
  padding:
    x: 1
    y: 1
  dynamic_padding: true

visual_bell:
  animation: EaseOutExpo
  duration: 0

# Should display the render timer
debug.render_timer: false

# Colors (Tomorrow Night Bright)
# colors:
#   # Default colors
#   primary:
#     background: '0x000000'
#     foreground: '0xeaeaea'
#
#   # Normal colors
#   normal:
#     black:   '0x000000'
#     red:     '0xd54e53'
#     green:   '0xb9ca4a'
#     yellow:  '0xe6c547'
#     blue:    '0x7aa6da'
#     magenta: '0xc397d8'
#     cyan:    '0x70c0ba'
#     white:   '0x424242'
#
#   # Bright colors
#   bright:
#     black:   '0x666666'
#     red:     '0xff3334'
#     green:   '0x9ec400'
#     yellow:  '0xe7c547'
#     blue:    '0x7aa6da'
#     magenta: '0xb77ee0'
#     cyan:    '0x54ced6'
#     white:   '0x2a2a2a'


# set $bg #0F0F0F
# set $bg_alt #242424
# set $bg_selection #3E3D32
# set $fg #F8F8F2
# set $fg_alt #8C8C8C
# set $beige #E6DB74
# set $blue  #66D9EF
# set $green #A6E22E
# set $orange #FD971F
# set $fuchsia #CD5AC5
# set $dark_red #D3201F
# set $vivid_red #F92672
# set $muave #ae81ff
# Colors (Monokai)
colors:
  # Default colors
  primary:
    background: '0x000000'
    foreground: '0xF8F8F2'

  # Normal colors
  normal:
    black:   '0x000000'
    red:     '0xD3201F'
    green:   '0xA6E22E'
    yellow:  '0xf9cc6c'
    blue:    '0x66D9EF'
    magenta: '0xCD5AC5'
    cyan:    '0x85dacc'
    white:   '0xfff1f3'

  # Bright colors
  bright:
    black:   '0x000000'
    red:     '0xF92672' #'0xfd6883'
    green:   '0xA6E22E'
    yellow:  '0xf9cc6c'
    blue:    '0x66D9EF'
    magenta: '0xCD5AC5'
    cyan:    '0x85dacc'
    white:   '0xfff1f3'

# # Colors (Solarized Dark)
# colors:
#   # Default colors
#   primary:
#     #background: '0x002b36'
#     #foreground: '0x839496'
#     background: '0x000000'
#     foreground: '0xb5b5b5'

#   # Normal colors
#   normal:
#     black:   '0x000020'
#     red:     '0xdc322f'
#     green:   '0x859900'
#     yellow:  '0xb58900'
#     blue:    '0x268bd2'
#     magenta: '0xd33682'
#     cyan:    '0x2aa198'
#     white:   '0xeee8d5'

#   # Bright colors
#   bright:
#     black:   '0x3b3b4a'
#     red:     '0xcb4b16'
#     green:   '0x586e75'
#     yellow:  '0x657b83'
#     blue:    '0x839496'
#     magenta: '0x6c71c4'
#     cyan:    '0x93a1a1'
#     white:   '0xfdf6e3'

#   # Custom cursor colour
#   cursor:
#     text:    '0x073642'
#     cursor:  '0x93a1a1'

# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# Possible values for `mods`
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
# mods may be combined with a `|`. For example, requiring control and shift
# looks like:
#
# mods: Control|Shift
#
# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action` or `chars` field must be present. `chars` writes the
# specified string every time that binding is activated. These should generally
# be escape sequences, but they can be configured to send arbitrary strings of
# bytes. Possible values of `action` include `Paste` and `PasteSelection`.
key_bindings:
  - { key: V,        mods: Control|Shift, action: Paste                        }
  - { key: C,        mods: Control|Shift, action: Copy                         }
  - { key: Home,                    chars: "\x1b[H",   mode: ~AppCursor  }
  - { key: Home,                    chars: "\x1b[1~",  mode: AppCursor   }
  - { key: End,                     chars: "\x1b[F",   mode: ~AppCursor  }
  - { key: End,                     chars: "\x1b[4~",  mode: AppCursor   }
  - { key: PageUp,                  chars: "\x1b[5~"                     }
  - { key: PageDown,                chars: "\x1b[6~"                     }
  - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                   }
  - { key: Left,     mods: Control, chars: "\x1b[1;5D"                   }
  - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                   }
  - { key: Left,                    chars: "\x1b[D",   mode: ~AppCursor  }
  - { key: Left,                    chars: "\x1bOD",   mode: AppCursor   }
  - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                   }
  - { key: Right,    mods: Control, chars: "\x1b[1;5C"                   }
  - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                   }
  - { key: Right,                   chars: "\x1b[C",   mode: ~AppCursor  }
  - { key: Right,                   chars: "\x1bOC",   mode: AppCursor   }
  - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                   }
  - { key: Up,       mods: Control, chars: "\x1b[1;5A"                   }
  - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                   }
  - { key: Up,                      chars: "\x1b[A",   mode: ~AppCursor  }
  - { key: Up,                      chars: "\x1bOA",   mode: AppCursor   }
  - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                   }
  - { key: Down,     mods: Control, chars: "\x1b[1;5B"                   }
  - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                   }
  - { key: Down,                    chars: "\x1b[B",   mode: ~AppCursor  }
  - { key: Down,                    chars: "\x1bOB",   mode: AppCursor   }
  - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                      }
  - { key: F1,                      chars: "\x1bOP"                      }
  - { key: F2,                      chars: "\x1bOQ"                      }
  - { key: F3,                      chars: "\x1bOR"                      }
  - { key: F4,                      chars: "\x1bOS"                      }
  - { key: F5,                      chars: "\x1b[15~"                    }
  - { key: F6,                      chars: "\x1b[17~"                    }
  - { key: F7,                      chars: "\x1b[18~"                    }
  - { key: F8,                      chars: "\x1b[19~"                    }
  - { key: F9,                      chars: "\x1b[20~"                    }
  - { key: F10,                     chars: "\x1b[21~"                    }
  - { key: F11,                     chars: "\x1b[23~"                    }
  - { key: F12,                     chars: "\x1b[24~"                    }
  - { key: Back,                    chars: "\x7f"                        }
  - { key: Delete,                  chars: "\x1b[3~",  mode: AppKeypad   }
  - { key: Delete,                  chars: "\x1b[P",   mode: ~AppKeypad  }

# Mouse bindings
#
# Currently doesn't support modifiers. Both the `mouse` and `action` fields must
# be specified.
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# Values for `action`:
# - Paste
# - PasteSelection
# - Copy (TODO)
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }


# Shell
#
# You can set this to a path to your favorite shell, e.g. /bin/fish
# shell:
