#!/bin/sh
#
# i3blocks integration with dunst.
# Original Author: Vivien Didelot <vivien.didelot@gmail.com>
# Author: Will Moggridge <will@moggridge.com>
#
# dunst caches notification and signals i3blocks.
# i3blocks catches the signal and prints the cached notification.
#
# Doing some weird stuff with logrotate to keep a nice history to scroll.
# notification.0 is always empty. Create a notification and roll it to .1.
#
# Put this rule at the end of your ~/.config/dunst/dunstrc:
#
#    [i3blocks]
#        summary = "*"
#        script = FULL_PATH_OF_THIS_SCRIPT
#
# Add this block in your ~/.i3blocks.conf:
#
#    [dunst]
#    label=N:
#    command=THIS_SCRIPT
#    interval=once
#    signal=12
#    align=right

CACHE=~/.cache/i3blocks/notifications/notification
CACHE_CURRENT=~/.cache/i3blocks/notifications/current
LOGROTATE_CONFIG=~/.cache/i3blocks/notifications/logrotate
CURRENT=
HIST_MIN=0
HIST_MAX=30

create_logrotation_config() {
    test -f $LOGROTATE_CONFIG && return
    cat << EOL > $LOGROTATE_CONFIG
~/.cache/i3blocks/notifications/notification {
    rotate 30
    start 1
    nocompress
    notifempty
}
EOL
}

display_no_notification() {
    echo "Have a great day! :)"
    echo ""
    echo "#444444"
    exit
}

display_notification() {
    test -e $CURRENT && CURRENT=`cat $CACHE_CURRENT`

    # source the notification
    . "$CACHE.$CURRENT"

    FULL_TEXT="($TIME) $SUMMARY $BODY"
    SHORT_TEXT="$SUMMARY"

    case $URGENCY in
        LOW)
            COLOR=#FFFFFF
            CODE=0
            ;;
        NORMAL)
            COLOR=#00FF00
            CODE=0
            ;;
        CRITICAL)
            COLOR=#FF0000
            CODE=33
            ;;
        *)
            # unknown urgency, certainly empty notification
            exit 0
            ;;
    esac

    # Output the status block
    echo $FULL_TEXT
    echo $SHORT_TEXT
    echo $COLOR
    exit $CODE
}

is_dunst() {
    test -z $5 && exit

    echo "1" > $CACHE_CURRENT

    # store the notification
    cat << EOL > $CACHE
DATE="$(date +'%Y-%d-%m')"
TIME="$(date +%T)"
APPNAME="$1"
SUMMARY="$2"
BODY="$3"
ICON="$4"
URGENCY="$5"
EOL

    logrotate -f $LOGROTATE_CONFIG 2> /dev/null || true

    # signal i3blocks that there is a new notification
    pkill -RTMIN+12 i3blocks
    exit
}

is_i3blocks() {
    # Load current notification if it is set.
    CURRENT=`cat $CACHE_CURRENT`
    if [ -z $CURRENT ]; then
        CURRENT=0
    fi

    # Scroll up
    if [ $BLOCK_BUTTON -eq 4 ]; then
        NEXT=$(( $CURRENT - 1 ))
        test -f "$CACHE.$NEXT" && CURRENT=$NEXT

    # Scroll down
    elif [ $BLOCK_BUTTON -eq 5 ]; then
        NEXT=$(( $CURRENT + 1 ))
        test -f "$CACHE.$NEXT" && CURRENT=$NEXT

    # Clear notification on click
    elif [ $BLOCK_BUTTON -ne 0 ]; then
        # Set current notification to empty
        CURRENT=0
    fi

    echo "$CURRENT" > $CACHE_CURRENT

    # echo "$CURRENT"

    test $CURRENT -eq 0 && display_no_notification
    display_notification

}

# Ensure the cache exists
mkdir -p `dirname $CACHE`
touch $CACHE
touch "$CACHE.0"
touch $CACHE_CURRENT
create_logrotation_config

if env | grep -q BLOCK_; then
    is_i3blocks "$@"
else
    is_dunst "$@"
fi
