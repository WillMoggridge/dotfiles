# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $spr Mod4
set $mod Mod4
set $alt Mod1
#
## Home row direction keys, like vim
#set $left h
#set $down j
#set $up k
#set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs



### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Wildcard inputs are breaking firefox on config reload :(
# https://reddit.com/r/swaywm/comments/q1514z/can_i_avoid_crashing_firefox_on_sway_reload/
# https://bugzilla.mozilla.org/show_bug.cgi?id=1652820
#input * {
#    xkb_layout "gb"
#    xkb_variant ""
#    #xkb_variant "extd"
#}

input "3690:780:TrulyErgonomic.com_Truly_Ergonomic_Computer_Keyboard" {
    xkb_layout "us"
    xkb_variant "colemak-tek"
}


#input "*/2_Synaptics_TouchPad" { #Breaking firefox on reload
input "2:1:PS/2_Synaptics_TouchPad" {
   dwt enabled
   tap enabled
   #natural_scroll enabled
   middle_emulation enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+$alt+d exec $menu

    #bindsym $mod+period           exec i3-input
    bindsym $mod+period            exec echo "" | wofi --dmenu -p "swaymsg" | xargs -r swaymsg
    # Rename workspace (can list names from csv)
    set $workspace_names = ""
    bindsym $mod+comma             exec echo "$workspace_names" | wofi --dmenu -p "New name for this workspace" | xargs -r swaymsg rename workspace to


    # dmenu and launchers
    #bindsym $mod+d                exec rofi -show run
    #bindsym $mod+Shift+d          exec rofi -show drun
    #bindsym $mod+$alt+Tab         exec rofi -show window
    bindsym $mod+d                exec wofi --show run
    bindsym $mod+Shift+d          exec wofi --show drun
    bindsym $mod+$alt+Tab         exec wofi --show window

    # Pulse Audio controls
    bindsym XF86AudioRaiseVolume  exec --no-startup-id ctl-volume raise
    bindsym --locked XF86AudioRaiseVolume  exec --no-startup-id ctl-volume raise
    bindsym XF86AudioLowerVolume  exec --no-startup-id ctl-volume lower
    bindsym --locked XF86AudioLowerVolume  exec --no-startup-id ctl-volume lower
    bindsym XF86AudioMute         exec --no-startup-id ctl-volume mute
    bindsym --locked XF86AudioMute         exec --no-startup-id ctl-volume mute
    bindsym XF86AudioMicMute      exec amixer -q -D pulse sset Capture Capture toggle
    bindsym Alt_R                 exec amixer -q -D pulse sset Capture Capture toggle
    bindsym ISO_Level3_Shift      exec amixer -q -D pulse sset Capture Capture toggle

    # Push to talk
    bindsym --no-repeat Control_R exec pactl set-source-mute 0 0
    bindsym --release Control_R   exec pactl set-source-mute 0 1
    bindsym --whole-window --no-repeat button8 exec pactl set-source-mute 0 0
    bindsym --whole-window --release button8   exec pactl set-source-mute 0 1

    # Sreen brightness controls
    bindsym XF86MonBrightnessUp   exec --no-startup-id ctl-backlight +
    bindsym XF86MonBrightnessDown exec --no-startup-id ctl-backlight -

    # Suspend from lock screen
    bindsym --locked $mod+Shift+Escape exec swayexit suspend

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    #bindsym $mod+$left focus left
    #bindsym $mod+$down focus down
    #bindsym $mod+$up focus up
    #bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    #bindsym $mod+Shift+$left move left
    #bindsym $mod+Shift+$down move down
    #bindsym $mod+Shift+$up move up
    #bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+$alt+1           workspace number 11
    bindsym $mod+$alt+2           workspace number 12
    bindsym $mod+$alt+3           workspace number 13
    bindsym $mod+$alt+4           workspace number 14
    bindsym $mod+$alt+5           workspace number 15
    bindsym $mod+$alt+6           workspace number 16
    bindsym $mod+$alt+7           workspace number 17
    bindsym $mod+$alt+8           workspace number 18
    bindsym $mod+$alt+9           workspace number 19
    bindsym $mod+$alt+0           workspace number 20
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10
    bindsym $mod+$alt+Shift+1     move container to workspace number 11; workspace number 11
    bindsym $mod+$alt+Shift+2     move container to workspace number 12; workspace number 12
    bindsym $mod+$alt+Shift+3     move container to workspace number 13; workspace number 13
    bindsym $mod+$alt+Shift+4     move container to workspace number 14; workspace number 14
    bindsym $mod+$alt+Shift+5     move container to workspace number 15; workspace number 15
    bindsym $mod+$alt+Shift+6     move container to workspace number 16; workspace number 16
    bindsym $mod+$alt+Shift+7     move container to workspace number 17; workspace number 17
    bindsym $mod+$alt+Shift+8     move container to workspace number 18; workspace number 18
    bindsym $mod+$alt+Shift+9     move container to workspace number 19; workspace number 19
    bindsym $mod+$alt+Shift+0     move container to workspace number 20; workspace number 20
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Move container to output
    #bindsym $mod+Ctrl+$alt+$left   move container to output left;  focus output left
    #bindsym $mod+Ctrl+$alt+$down   move container to output down;  focus output down
    #bindsym $mod+Ctrl+$alt+$up     move container to output up;    focus output up
    #bindsym $mod+Ctrl+$alt+$right  move container to output right; focus output right
    bindsym $mod+Ctrl+$alt+Left        move container to output left;  focus output left
    bindsym $mod+Ctrl+$alt+Down        move container to output down;  focus output down
    bindsym $mod+Ctrl+$alt+Up          move container to output up;    focus output up
    bindsym $mod+Ctrl+$alt+Right       move container to output right; focus output right


    #####
    ##### Navigate workspaces
    #####

    # Navigate workspaces on output
    #bindsym $mod+Ctrl+$vim_left   workspace prev_on_output
    #bindsym $mod+Ctrl+$vim_right  workspace next_on_output
    bindsym $mod+Ctrl+Left        workspace prev_on_output
    bindsym $mod+Ctrl+Right       workspace next_on_output

    # Quick switch!
    bindsym $mod+q                workspace back_and_forth
    bindsym $mod+z                workspace back_and_forth


    #####
    ##### Move workspaces
    #####

    # Move workspace to output
    #bindsym $mod+Shift+$alt+$vim_left   move workspace to output left
    #bindsym $mod+Shift+$alt+$vim_down   move workspace to output down
    #bindsym $mod+Shift+$alt+$vim_up     move workspace to output up
    #bindsym $mod+Shift+$alt+$vim_right  move workspace to output right
    bindsym $mod+Shift+$alt+Left        move workspace to output left
    bindsym $mod+Shift+$alt+Down        move workspace to output down
    bindsym $mod+Shift+$alt+Up          move workspace to output up
    bindsym $mod+Shift+$alt+Right       move workspace to output right


#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+w layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    bindsym $mod+b border toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+p focus parent
    bindsym $mod+c focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    #bindsym $left resize shrink width 10px
    #bindsym $down resize grow height 10px
    #bindsym $up resize shrink height 10px
    #bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"



#####
##### System bar (lock/logout/power)
#####

set $system_functions System (l) lock, (s) suspend, (Shift+e) logout, (Shift+r) reboot, (Shift+x) shutdown
mode "$system_functions" {
    bindsym l                     exec --no-startup-id swayexit lock,      mode "default"
    bindsym Shift+e               exec --no-startup-id swayexit logout,    mode "default"
    bindsym s                     exec --no-startup-id swayexit suspend,   mode "default"
    bindsym Shift+h               exec --no-startup-id swayexit hibernate, mode "default"
    bindsym Shift+r               exec --no-startup-id swayexit reboot,    mode "default"
    bindsym Shift+x               exec --no-startup-id swayexit shutdown,  mode "default"
    bindsym a                     exec --no-startup-id swayexit autolock-disable,  mode "default"
    bindsym Shift+a               exec --no-startup-id swayexit autolock-enable,  mode "default"

    # Exit mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Pause            mode "$system_functions"
bindsym $mod+Escape           mode "$system_functions"


# The middle button over a titlebar kills the window
bindsym --release             button2 kill
bindsym --whole-window        $mod+button2 kill

# The right button toggles floating
bindsym --release             button3 floating toggle
bindsym --whole-window        $mod+button3 floating toggle


# Navigate panes
#bindsym $mod+Left             focus left
#bindsym $mod+Down             focus down
#bindsym $mod+Up               focus up
#bindsym $mod+Right            focus right

# Navigate to output
bindsym $mod+$alt+Left        focus output left
bindsym $mod+$alt+Down        focus output down
bindsym $mod+$alt+Up          focus output up
bindsym $mod+$alt+Right       focus output right


# Notifications
bindsym ctrl+grave            exec "dunstctl close"
bindsym ctrl+shift+grave      exec "dunstctl history-pop"
bindsym $alt+grave            exec "dunstctl context"


#####
##### Screenshot bar
#####
set $screenshot_folder ~/Images/Screenshots
set $screenshot Screenshot: (g) gui, (f) whole desktop, (s) single screen
mode "$screenshot" {
    bindsym g                     exec flameshot gui --path $screenshot_folder
    bindsym f                     exec flameshot full --path $screenshot_folder
    bindsym s                     exec flameshot screen --path $screenshot_folder

    # Exit mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Print            mode "$screenshot"
bindsym Print                 exec flameshot gui --path $screenshot_folder
bindsym ctrl+Print            exec flameshot gui --path $screenshot_folder
# bindsym Shift+Print            exec flameshot [Active window when available]
#bindsym $alt+Sys_Req          exec flameshot full --path $screenshot_folder
#bindsym $alt+Shift+Sys_Req    exec flameshot full --clipboard

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

set $border_width 4

#set $orange  #E95420
set $orange_dark #d44615
set $white #ffffff


set $bg #0F0F0F
set $bg_alt #242424
set $bg_selection #3E3D32
set $fg #F8F8F2
set $fg_alt #8C8C8C
set $beige #E6DB74
set $blue  #66D9EF
set $green #A6E22E
set $orange #FD971F
set $fuchsia #CD5AC5
set $dark_red #D3201F
set $vivid_red #F92672
set $muave #ae81ff

bar {
    position top
    #swaybar_command=

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %I:%M:%S %p'; do

    font "pango: Roboto 11"sleep 1; done
    #status_command waybar
    status_command /home/will/.nix-profile/bin/i3status-rs
    tray_padding 4px
    #tray_output primary
    workspace_min_width 50

    #colors {
    #    statusline #ffffff
    #    background #323232
    #    inactive_workspace #32323200 #32323200 #5c5c5c
    #}

    colors {
        background $bg
        statusline #ffffffff
        separator #666666ff

        # border bg fg
        focused_workspace  $fg_alt $blue $bg_alt
        #focused_workspace  $orange $orange $bg
        active_workspace   $fg_alt $fg_alt $bg_alt
        inactive_workspace $bg_selection $bg_alt $fg_alt
        #urgent_workspace   $fg_alt $dark_red $fg
        urgent_workspace  $orange $orange $bg
        #binding_mode       #fg_alt $blue $bg_alt
        #binding_mode       #fg_alt $muave $bg_alt
    }

    ## Disable scrolling workspaces (Breaks volume scrolling)
    ## Disable vertical scrolling
    #bindsym button4 nop
    #bindsym button5 nop
    ## Disable horizontal scrolling
    #bindsym button6 nop
    #bindsym button7 nop

    # Push to talk
    bindsym button8 exec pactl set-source-mute 0 0
    bindsym --release button8   exec pactl set-source-mute 0 1
}


focus_follows_mouse no
mouse_warping none
font "pango: Roboto 8"
#font "pango: Jetbrains Mono 8"

# Border settings (<border> <background> <text> <indicator> <child_border>)
client.focused          $blue $blue $bg_alt $bg_alt
#client.focused          $orange $orange $bg_alt $bg
client.focused_inactive $fg_alt $fg_alt $bg_alt $bg
client.unfocused        $bg_alt $bg_selection $fg_alt #292d2e
#client.urgent           $fg_alt $dark_red $fg $fg
client.urgent         $orange $orange $bg_alt $bg
#client.focused          $orange $orange_dark $white $white
#client.focused_inactive #333333 #5F676A #ffffff #484e50
#client.unfocused        #333333 #424242 #888888 #292d2e
#client.urgent           #C10004 #900000 #ffffff #900000
#hide_edge_borders both
default_floating_border normal $border_width
default_border pixel $border_width

#smart_borders on
hide_edge_borders --i3 smart

# Default workspace layout
workspace_layout stacking

####################
#################### Rules
####################

# The command you are looking for is xprop, future-Will.
# ...Or swaymsg -t get_tree


### General pop-up catch all
for_window [window_role="pop-up"]       floating enable

### Float windows
for_window [class="Gsimplecal"]         floating enable
for_window [class="Update-manager"]     floating enable

# Try to inhibit idle if a window is fullscreen
# xwayland
for_window [class="^.*"] inhibit_idle fullscreen
# wayland
for_window [app_id="^.*"] inhibit_idle fullscreen
# Steam apps
for_window [class="steam_app*"] inhibit_idle focus

# Fixes multimonitor for flameshot
for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0

# Firefox webrtc popup
for_window [app_id="firefox" title="Firefox — Sharing Indicator"] exec sway-move-to very-top "Firefox — Sharing Indicator"
for_window [app_id="firefox-aurora" title="Firefox Developer Edition — Sharing Indicator"] exec sway-move-to very-top "Firefox — Sharing Indicator"

# TODO Sticky floating Chrome meet pop out

### Default workspaces
# Firefox
# https://addons.mozilla.org/en-GB/firefox/addon/window-titler/
for_window [title="\[Home\] .* — Firefox( Developer Edition)?"] move window to workspace 1
for_window [title="\[Chat\] .* — Firefox( Developer Edition)?"] move window to workspace 4
for_window [title="\[Work\] .* — Firefox( Developer Edition)?"] move window to workspace 6
# Slack
# Slack chat window
for_window [class="Slack" window_type="normal"] move window to workspace 8
# Slack Huddle window
for_window [class="Slack" title=".* - Huddle"] move window to workspace 9; workspace number 9
# kitty terminal
for_window [app_id="kitty-home"] move window to workspace 3
for_window [app_id="kitty-work"] move window to workspace 7


# Default apps
bindsym $mod+Shift+period \
    exec slack; \
    exec ff-default; \
    exec kitty --class="kitty-home" -- zsh -c "tmux-home"; \
    exec sleep 5 && kitty --class="kitty-work" -- zsh -c "tmux-work"; \
    exec pkill kanshi; exec kanshi


# Gnome security policies and privilege escalation
exec --no-startup-id "/usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1"

# Autostart programs using dex (https://github.com/jceb/dex)
# Autostart config: https://standards.freedesktop.org/menu-spec/latest/ar01s03.html
exec --no-startup-id "dex --autostart --environment i3"

# Flameshot screenshot tool
exec --no-startup-id flameshot

exec_always pkill kanshi; exec kanshi
#exec_always nwg-panel


include /etc/sway/config.d/*
include /home/will/.config/sway/conf.d/*
include /home/will/.config/sway/conf.d/_*


exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
#exec_always "systemctl --user import-environment"
exec_always "systemctl --user import-environment; systemctl --user start sway-session.target"
