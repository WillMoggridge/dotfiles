#Automatically load aliases from this file

alias ack='ack-grep'

alias restartadb='adb kill-server && adb start-server'
alias logcat='adb logcat'
alias logcate='adb -e logcat'
alias logcatd='adb -d logcat'

alias reloadenvs="source ~/.local_envs"

# Server stuff
alias server-env='source env/bin/activate'

alias darkxdragon='cd ~/Source/websites/darkxdragon && source env/bin/activate'
alias willmoggridge='cd ~/Source/websites/willmoggridge && source env/bin/activate'
alias wm-site='cd ~/Source/websites/willmoggridge-site && source env/bin/activate'

alias darkxdragon-runserver='darkxdragon && ./manage.py runserver 8010'
alias willmoggridge-runserver='willmoggridge && ./manage.py runserver 8020'
alias wm-site-runserver='wm-site && ./manage.py runserver 8020'

# Programs
alias ipn="ipython notebook --notebook-dir=~/Source/notebooks --gui gtk"
alias ff="firefox -P DarkXDragon"
alias ff-wm="firefox -P WillMoggridge -no-remote"
alias kp="keepass2"

# Call virtualenvwrapper's "workon" if .venv exists.
# http://justinlilly.com/python/virtualenv_wrapper_helper.html
# https://gist.github.com/cjerdonek/7583644
check_virtualenv() {
    if [ -e .venv ]; then
        env=`cat .venv`
        if [ "$env" != "${VIRTUAL_ENV##*/}" ]; then
            echo "Found .venv in directory. Calling: workon ${env}"
            workon $env
        fi
    fi
}
venv_cd () {
    builtin cd "$@" && check_virtualenv
}
# Check new shell instances
check_virtualenv
alias cd="venv_cd"
